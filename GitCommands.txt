PS C:\Users\uchit> git
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
PS C:\Users\uchit> git clone https://github.com/us2909/SSproject1.git
Cloning into 'SSproject1'...
remote: Enumerating objects: 15, done.
remote: Counting objects: 100% (3/3), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 15 (delta 0), reused 0 (delta 0), pack-reused 12
Receiving objects: 100% (15/15), done.
Resolving deltas: 100% (2/2), done.
PS C:\Users\uchit> cd
PS C:\Users\uchit> cd .\SSproject1\
PS C:\Users\uchit\SSproject1> dir


    Directory: C:\Users\uchit\SSproject1


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
-a----         1/12/2023   2:41 PM             21 README.md
-a----         1/12/2023   2:41 PM            893 UltraCode_v1.ino


PS C:\Users\uchit\SSproject1> notepad first.py
PS C:\Users\uchit\SSproject1> dir


    Directory: C:\Users\uchit\SSproject1


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
-a----         1/12/2023   2:43 PM             20 first.py
-a----         1/12/2023   2:41 PM             21 README.md
-a----         1/12/2023   2:41 PM            893 UltraCode_v1.ino


PS C:\Users\uchit\SSproject1> git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        first.py

nothing added to commit but untracked files present (use "git add" to track)
PS C:\Users\uchit\SSproject1> git add first.py
PS C:\Users\uchit\SSproject1> git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   first.py

PS C:\Users\uchit\SSproject1> git commit -m "added a first.py"
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'uchit@EDITH.(none)')
PS C:\Users\uchit\SSproject1>  git config --global user.email "uchitshriyan1999@gmail.com"
PS C:\Users\uchit\SSproject1>  git config --global user.name "us2909"
PS C:\Users\uchit\SSproject1>  git config --global user.name "UchitShriyan"
PS C:\Users\uchit\SSproject1> git commit -m "added a first.py"
[master ba2446a] added a first.py
 1 file changed, 1 insertion(+)
 create mode 100644 first.py
PS C:\Users\uchit\SSproject1> git push origin
info: please complete authentication in your browser...
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 16 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 346 bytes | 346.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/us2909/SSproject1.git
   17a3f63..ba2446a  master -> master
PS C:\Users\uchit\SSproject1> git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        GitCommands.txt

nothing added to commit but untracked files present (use "git add" to track)
PS C:\Users\uchit\SSproject1> git add .\GitCommands.txt
PS C:\Users\uchit\SSproject1> git commit -m "GitCommands added"
[master 083b111] GitCommands added
 1 file changed, 131 insertions(+)
 create mode 100644 GitCommands.txt
PS C:\Users\uchit\SSproject1> git push origin
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 16 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 2.22 KiB | 2.22 MiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/us2909/SSproject1.git
   ba2446a..083b111  master -> master
PS C:\Users\uchit\SSproject1> git checkout
Your branch is up to date with 'origin/master'.
PS C:\Users\uchit\SSproject1> git checkout -b lasagna
Switched to a new branch 'lasagna'
PS C:\Users\uchit\SSproject1> git branch
* lasagna
  master
PS C:\Users\uchit\SSproject1> git status
On branch lasagna
nothing to commit, working tree clean
PS C:\Users\uchit\SSproject1> dir


    Directory: C:\Users\uchit\SSproject1


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
-a----         1/12/2023   2:43 PM             20 first.py
-a----         1/12/2023   2:55 PM           5256 GitCommands.txt
-a----         1/12/2023   2:41 PM             21 README.md
-a----         1/12/2023   2:41 PM            893 UltraCode_v1.ino


PS C:\Users\uchit\SSproject1> git add .\GitCommands.txt
PS C:\Users\uchit\SSproject1> git status
On branch lasagna
nothing to commit, working tree clean
PS C:\Users\uchit\SSproject1>